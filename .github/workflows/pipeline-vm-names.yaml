name: VM Name - Manage VM uptime

on: 
  # Manual trigger for start and stop jobs
  workflow_dispatch:
    inputs:
      vmNames:
        description: 'VM name prefix to manage'
        required: true
      override_start:
        description: 'Manual run, start VMs? (false/true)'
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      override_shutdown:
        description: 'Manual run, shutdown VMs? (false/true)'
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  AZURE_CLIENT_ID: ${{ vars.CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ vars.TENANT_ID }}

jobs:
  validate-overrides:
    runs-on: ubuntu-latest
    steps:
      - name: Check for conflicting overrides
        run: |
          if [ "${{ github.event.inputs.override_start }}" == "true" ] && [ "${{ github.event.inputs.override_shutdown }}" == "true" ]; then
            echo -e "\033[36m Error: Both override_start and override_shutdown cannot be true at the same time. \033[0m"
            exit 1
          fi

  start-vms:
    runs-on: ubuntu-latest
    needs: validate-overrides
    if: github.event.inputs.override_start == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: az login
        run: az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      - name: Start VMs that contain '${{ github.event.inputs.vmNames }}' in the name 
        run: |
          chmod +x ./vmNames-start.sh  # Ensure your script is executable
          ./vmNames-start.sh ${{ github.event.inputs.vmNames }}

  stop-vms:
    runs-on: ubuntu-latest
    needs: validate-overrides
    if: github.event.inputs.override_shutdown == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: az login
        run: az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      - name: Stop VMs that contain '${{ github.event.inputs.vmNames }}' in the name 
        run: |
          chmod +x ./vmNames-shutdown.sh  # Ensure your shutdown script is executable
          ./vmNames-shutdown.sh ${{ github.event.inputs.vmNames }}
