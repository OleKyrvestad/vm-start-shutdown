name: Manage VM uptime

on:
  # Schedule 1: Start VMs every day at 7:30 AM Norwegian time (CET/CEST)
  schedule:
    - cron: '30 6 * * *'  # 6:30 AM UTC = 7:30 AM CET/CEST
  # Schedule 2: Stop VMs every day at 10:00 PM Norwegian time (CET/CEST)
    - cron: '00 21 * * *'  # 9:00 PM UTC = 10:00 PM CET/CEST

  # Manual trigger for both start and stop jobs
  workflow_dispatch:
    inputs:
      vmPrefix:
        description: 'VM name prefix to manage'
        required: true
        default: 'vm-dev'
      override_start:
        description: 'Override to force start of VMs'
        default: 'false'
      override_shutdown:
        description: 'Override to force shutdown of VMs'
        default: 'false'

jobs:
  validate-overrides:
    runs-on: ubuntu-latest
    steps:
      - name: Check for conflicting overrides
        run: |
          if [ "${{ github.event.inputs.override_start }}" == "true" ] && [ "${{ github.event.inputs.override_shutdown }}" == "true" ]; then
            echo -e "\033[36m Error: Both override_start and override_shutdown cannot be true at the same time. \033[0m"
            exit 1
          fi

  start-vms:
    runs-on: ubuntu-latest
    needs: validate-overrides
    if: (github.event_name == 'schedule' && contains(github.event.schedule, '30 6')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.override_start == 'true')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Azure CLI
        uses: azure/CLI@v1

      - name: Start VMs with Prefix ${{ github.event.inputs.vmPrefix }}
        run: |
          chmod +x .vm-start.sh  # Ensure your script is executable
          ./vm-start.sh ${{ github.event.inputs.vmPrefix }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ env.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ env.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

  stop-vms:
    runs-on: ubuntu-latest
    needs: validate-overrides
    if: (github.event_name == 'schedule' && contains(github.event.schedule, '00 21')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.override_shutdown == 'true')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/CLI@v1

      - name: Stop VMs with Prefix ${{ github.event.inputs.vmPrefix }}
        run: |
          chmod +x ./vm-shutdown.sh  # Ensure your shutdown script is executable
          ./vm-shutdown.sh ${{ github.event.inputs.vmPrefix }}
        env:
          AZURE_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ env.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ env.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
